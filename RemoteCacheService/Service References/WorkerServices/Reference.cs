//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RemoteCacheService.WorkerServices {
    
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="RemoteCacheService.WorkerServices", ConfigurationName="IWorkerService")]
public interface IWorkerService {
    
    // CODEGEN: Generating message contract since the wrapper namespace (http://tempuri.org/) of message AddWorkRequest does not match the default value (RemoteCacheService.WorkerServices)
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerService/AddWork", ReplyAction="http://tempuri.org/IWorkerService/AddWorkResponse")]
    AddWorkResponse AddWork(AddWorkRequest request);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWorkerService/AddWork", ReplyAction="http://tempuri.org/IWorkerService/AddWorkResponse")]
    System.IAsyncResult BeginAddWork(AddWorkRequest request, System.AsyncCallback callback, object asyncState);
    
    AddWorkResponse EndAddWork(System.IAsyncResult result);
    
    // CODEGEN: Generating message contract since the wrapper namespace (http://tempuri.org/) of message GetPathForImageRequest does not match the default value (RemoteCacheService.WorkerServices)
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerService/GetPathForImage", ReplyAction="http://tempuri.org/IWorkerService/GetPathForImageResponse")]
    GetPathForImageResponse GetPathForImage(GetPathForImageRequest request);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWorkerService/GetPathForImage", ReplyAction="http://tempuri.org/IWorkerService/GetPathForImageResponse")]
    System.IAsyncResult BeginGetPathForImage(GetPathForImageRequest request, System.AsyncCallback callback, object asyncState);
    
    GetPathForImageResponse EndGetPathForImage(System.IAsyncResult result);
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="AddWork", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
public partial class AddWorkRequest {
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
    public System.Uri source;
    
    public AddWorkRequest() {
    }
    
    public AddWorkRequest(System.Uri source) {
        this.source = source;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="AddWorkResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
public partial class AddWorkResponse {
    
    public AddWorkResponse() {
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetPathForImage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
public partial class GetPathForImageRequest {
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
    public System.Uri url;
    
    public GetPathForImageRequest() {
    }
    
    public GetPathForImageRequest(System.Uri url) {
        this.url = url;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetPathForImageResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
public partial class GetPathForImageResponse {
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
    public string GetPathForImageResult;
    
    public GetPathForImageResponse() {
    }
    
    public GetPathForImageResponse(string GetPathForImageResult) {
        this.GetPathForImageResult = GetPathForImageResult;
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IWorkerServiceChannel : IWorkerService, System.ServiceModel.IClientChannel {
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class WorkerServiceClient : System.ServiceModel.ClientBase<IWorkerService>, IWorkerService {
    
    public WorkerServiceClient() {
    }
    
    public WorkerServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName) {
    }
    
    public WorkerServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public WorkerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public WorkerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress) {
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    AddWorkResponse IWorkerService.AddWork(AddWorkRequest request) {
        return base.Channel.AddWork(request);
    }
    
    public void AddWork(System.Uri source) {
        AddWorkRequest inValue = new AddWorkRequest();
        inValue.source = source;
        AddWorkResponse retVal = ((IWorkerService)(this)).AddWork(inValue);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWorkerService.BeginAddWork(AddWorkRequest request, System.AsyncCallback callback, object asyncState) {
        return base.Channel.BeginAddWork(request, callback, asyncState);
    }
    
    public System.IAsyncResult BeginAddWork(System.Uri source, System.AsyncCallback callback, object asyncState) {
        AddWorkRequest inValue = new AddWorkRequest();
        inValue.source = source;
        return ((IWorkerService)(this)).BeginAddWork(inValue, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    AddWorkResponse IWorkerService.EndAddWork(System.IAsyncResult result) {
        return base.Channel.EndAddWork(result);
    }
    
    public void EndAddWork(System.IAsyncResult result) {
        AddWorkResponse retVal = ((IWorkerService)(this)).EndAddWork(result);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetPathForImageResponse IWorkerService.GetPathForImage(GetPathForImageRequest request) {
        return base.Channel.GetPathForImage(request);
    }
    
    public string GetPathForImage(System.Uri url) {
        GetPathForImageRequest inValue = new GetPathForImageRequest();
        inValue.url = url;
        GetPathForImageResponse retVal = ((IWorkerService)(this)).GetPathForImage(inValue);
        return retVal.GetPathForImageResult;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWorkerService.BeginGetPathForImage(GetPathForImageRequest request, System.AsyncCallback callback, object asyncState) {
        return base.Channel.BeginGetPathForImage(request, callback, asyncState);
    }
    
    public System.IAsyncResult BeginGetPathForImage(System.Uri url, System.AsyncCallback callback, object asyncState) {
        GetPathForImageRequest inValue = new GetPathForImageRequest();
        inValue.url = url;
        return ((IWorkerService)(this)).BeginGetPathForImage(inValue, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetPathForImageResponse IWorkerService.EndGetPathForImage(System.IAsyncResult result) {
        return base.Channel.EndGetPathForImage(result);
    }
    
    public string EndGetPathForImage(System.IAsyncResult result) {
        GetPathForImageResponse retVal = ((IWorkerService)(this)).EndGetPathForImage(result);
        return retVal.GetPathForImageResult;
    }
}
